# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  name: AaaLib

  # A short description of the repository that will show up on GitHub
  description: Nothing to see here. Seriously. Move on.

  # A URL with more information about the repository
  # homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  # topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: true

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: false

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: false

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
    - name: area:aaalib
      color: cccccc
      description: "[issue/PR] affects the AaaLib library."
    - name: area:build
      color: cccccc
      description: "[issue/PR] affects project files and/or build settings."
    - name: area:deps
      color: cccccc
      description: "[issue/PR] adds, updates, or removes dependencies."
    - name: area:docs
      color: cccccc
      description: "[issue/PR] affects documentation (excluding XML docs that are part of source code)."
    - name: area:devops
      color: cccccc
      description: "[issue/PR] affects GitHub actions / repository automation."

    - name: bug
      color: cc0000
      description: "[issue/PR] raises / solves a bug."
    - name: enhancement
      color: 3366cc
      description: "[issue/PR] requests / implements new or improved functionality."
    - name: refactor
      color: 006699
      description: "[issue/PR] requests / implements a refactor of existing code without affecting functionality."
    - name: style
      color: ccffcc
      description: "[issue/PR] requests / implements code style changes."

    - name: breaking
      color: ffcc00
      description: "[issue/PR] requires / contains breaking changes."
    - name: help-wanted
      color: cc3366
      description: "[issue/PR] needs help to solve / finalize."
    - name: easy
      color: ccccff
      description: "[issue] Easy issue, good pick for new collaborators."

    - name: invalid
      color: 666666
      description: "[issue] Problem caused by user or third-party code, or otherwise not a valid issue."
    - name: duplicate
      color: 666666
      description: "[issue] Duplicate of another issue."
    - name: by-design
      color: 666666
      description: "[issue] The lamented behavior is by design."
    - name: wontfix
      color: 666666
      description: "[issue] Valid issue, but will not be acted upon (see comments)."

#  - name: Help Wanted
#    # Provide a new name to rename an existing label
#    new_name: first-timers-only

# Milestones: define milestones for Issues and Pull Requests
# milestones:
#   - title: milestone-title
#     description: milestone-description
#     # The state of the milestone. Either `open` or `closed`
#     state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
  - username: rdeago
    permission: admin

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options
# teams:
#   - name: core
#     # The permission to grant the team. Can be one of:
#     # * `pull` - can pull, but not push to or administer this repository.
#     # * `push` - can pull and push, but not administer this repository.
#     # * `admin` - can pull, push and administer this repository.
#     # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
#     # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
#     permission: admin
#   - name: docs
#     permission: push

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks: null
#         # Required. Require branches to be up to date before merging.
#         strict: true
#         # Required. The list of status checks to require in order to merge into this branch
#         contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: null
      # Prevent merge commits from being pushed to matching branches.
      required_linear_history: true
      # Requires all conversations on code to be resolved before a pull request can be merged. Set to false to disable. Default: false.
      required_conversation_resolution: true
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions: null
      # restrictions:
      #   apps: []
      #   users: []
      #   teams: []
